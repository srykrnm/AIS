#!/bin/bash

### VARIABLES ###

MODE="UEFI" # Default
RAM_SIZE=$(free -m | awk '/^Mem:/{print $2}')
SWAP_SIZE=$((RAM_SIZE / 2))
CONTINENT="Asia" # ls /usr/share/zoneinfo/ -> for more details
TIMEZONE="Kolkata" # ls /usr/share/zoneinfo/$CONTINENT/ -> for more details
LOCALE="en_US.UTF-8 UTF-8" # cat /etc/locale.gen
DISK="/dev/sda"

### FUNCTIONS ###

root_qn() {
   
    # Checking for root previlages.

    if [[ $EUID -ne 0 ]]; then
        echo "This script must be run as root."
        exit 1
    fi

}

init () {

    # Check whether UEFI / LEGACY is supported

    if [ -d "/sys/firmware/efi/efivars" ]; then
        MODE="UEFI"
    else
        MODE="BIOS"
    fi

    # NTP setup

    timedatectl set-ntp true

}

disk_partition() {

    # UEFI partitioning
    
    if [ "$MODE" = "UEFI" ]; then
        sgdisk --zap-all ${DISK} # zap all on disk
        printf "g\nn\n\n1\n\n+512M\nt\n1\n1\nn\n\n\n8300\nn\n\n\n\nw\n" | fdisk ${DISK}
        mkfs.fat -F32 ${DISK}1
        mkswap ${DISK}2
        mkfs.ext4 ${DISK}3
        swapon ${DISK}2
        mount ${DISK}3 /mnt
    fi

    # BIOS partitioning
    
    if [ "$MODE" = "BIOS" ]; then
        sgdisk --zap-all ${DISK} # zap all on disk
        printf "o\nn\np\n1\n\n+${SWAP_SIZE}G\nt\n82\nn\np\n2\n\n\nw\n" | fdisk ${DISK}
        mkswap ${DISK}1
        swapon ${DISK}1
        mkfs.ext4 ${DISK}2
        mount ${DISK}2 /mnt
    fi


}

the_main_stuff() {

    # Installing stuff , creating fstab , chrooting -> /mnt

    pacstrap /mnt base linux linux-firmware linux-headers
    genfstab -U /mnt >> /mnt/etc/fstab
    arch-chroot /mnt
    pacman -S sudo git grub

}

user_settings() {

    # Setting timezone
    ls -sf /usr/share/zoneinfo/$CONTINENT/$TIMEZONE /etc/localtime

    # Synchronising hardware clock
    hwclock --systohc 

    # Setting locale
    sed -i "/#$LOCALE/s/^#//" /etc/locale.gen
    locale-gen

    # Setting hostname and root passwd
    read -p "Enter the desired hostname: " HOST_NAME
    read -s -p "Enter the desired root password: " ROOT_PASSWORD

    #Setting additional user , group and their passwd
    read -p "Enter the username for User: " USER_NAME
    read -s -p "Enter the password for User: " USER_PASSWORD
    useradd -m -G wheel $USER_NAME
    echo -e "$USER_PASSWORD\n$USER_PASSWORD" | passwd $USERNAME

    #making the user exec any cmd with passwd
    sed -i '/# %wheel ALL=(ALL:ALL) ALL/s/^#//' "$file"

}

bootloader_setup() {

    # Installing grub according to $MODE and generating grub config.
    if [ "$MODE" = "UEFI" ]; then
        mkdir /boot/EFI
        mount ${DISK}1 /boot/EFI
        pacman -S efibootmgr dosfstools mtools os-prober
        grub-install --target=x86_64-efi --bootloader-id=$BOOTLOADER_ID --recheck
    else
        grub-install ${DISK}
    fi
    grub-mkconfig -o /boot/grub/grub.cfg

}

conclusion() {
    pacman -S networkmanager
    systemctl enable NetworkManager
    umount -l /mnt
    sleep 20
    reboot
}

